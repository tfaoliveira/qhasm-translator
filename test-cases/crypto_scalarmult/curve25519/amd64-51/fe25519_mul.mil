
param u64 crypto_scalarmult_curve25519_amd64_51_REDMASK51 = 0x0007FFFFFFFFFFFF;

fn crypto_scalarmult_curve25519_amd64_51_fe25519_mul(reg u64[5] rp, reg u64[5] xp, reg u64[5] yp){

	 reg bool cf;
	 reg u64 mulr01;
	 reg u64 mulr11;
	 reg u64 mulr21;
	 reg u64 mulr31;
	 reg u64 mulr41;
	 reg u64 mulrax;
	 reg u64 mulrdx;
	 reg u64 mulredmask;
	 reg u64 mult;
	 stack u64 mulx319_stack;
	 stack u64 mulx419_stack;
	 reg u64 r0;
	 reg u64 r1;
	 reg u64 r2;
	 reg u64 r3;
	 reg u64 r4;
	 stack u64 rp_stack;

	rp_stack = rp;
	yp = yp;
	mulrax = xp[3];
	mulrax *= 19;
	mulx319_stack = mulrax;
	mulrdx, mulrax = mulrax * yp[2];
	r0 = mulrax;
	mulr01 = mulrdx;
	mulrax = xp[4];
	mulrax *= 19;
	mulx419_stack = mulrax;
	mulrdx, mulrax = mulrax * yp[1];
	cf, r0 += mulrax;
	mulr01 += mulrdx + cf; 
	mulrax = xp[0];
	mulrdx, mulrax = mulrax * yp[0];
	cf, r0 += mulrax;
	mulr01 += mulrdx + cf; 
	mulrax = xp[0];
	mulrdx, mulrax = mulrax * yp[1];
	r1 = mulrax;
	mulr11 = mulrdx;
	mulrax = xp[0];
	mulrdx, mulrax = mulrax * yp[2];
	r2 = mulrax;
	mulr21 = mulrdx;
	mulrax = xp[0];
	mulrdx, mulrax = mulrax * yp[3];
	r3 = mulrax;
	mulr31 = mulrdx;
	mulrax = xp[0];
	mulrdx, mulrax = mulrax * yp[4];
	r4 = mulrax;
	mulr41 = mulrdx;
	mulrax = xp[1];
	mulrdx, mulrax = mulrax * yp[0];
	cf, r1 += mulrax;
	mulr11 += mulrdx + cf; 
	mulrax = xp[1];
	mulrdx, mulrax = mulrax * yp[1];
	cf, r2 += mulrax;
	mulr21 += mulrdx + cf; 
	mulrax = xp[1];
	mulrdx, mulrax = mulrax * yp[2];
	cf, r3 += mulrax;
	mulr31 += mulrdx + cf; 
	mulrax = xp[1];
	mulrdx, mulrax = mulrax * yp[3];
	cf, r4 += mulrax;
	mulr41 += mulrdx + cf; 
	mulrax = xp[1];
	mulrax *= 19;
	mulrdx, mulrax = mulrax * yp[4];
	cf, r0 += mulrax;
	mulr01 += mulrdx + cf; 
	mulrax = xp[2];
	mulrdx, mulrax = mulrax * yp[0];
	cf, r2 += mulrax;
	mulr21 += mulrdx + cf; 
	mulrax = xp[2];
	mulrdx, mulrax = mulrax * yp[1];
	cf, r3 += mulrax;
	mulr31 += mulrdx + cf; 
	mulrax = xp[2];
	mulrdx, mulrax = mulrax * yp[2];
	cf, r4 += mulrax;
	mulr41 += mulrdx + cf; 
	mulrax = xp[2];
	mulrax *= 19;
	mulrdx, mulrax = mulrax * yp[3];
	cf, r0 += mulrax;
	mulr01 += mulrdx + cf; 
	mulrax = xp[2];
	mulrax *= 19;
	mulrdx, mulrax = mulrax * yp[4];
	cf, r1 += mulrax;
	mulr11 += mulrdx + cf; 
	mulrax = xp[3];
	mulrdx, mulrax = mulrax * yp[0];
	cf, r3 += mulrax;
	mulr31 += mulrdx + cf; 
	mulrax = xp[3];
	mulrdx, mulrax = mulrax * yp[1];
	cf, r4 += mulrax;
	mulr41 += mulrdx + cf; 
	mulrax = mulx319_stack;
	mulrdx, mulrax = mulrax * yp[3];
	cf, r1 += mulrax;
	mulr11 += mulrdx + cf; 
	mulrax = mulx319_stack;
	mulrdx, mulrax = mulrax * yp[4];
	cf, r2 += mulrax;
	mulr21 += mulrdx + cf; 
	mulrax = xp[4];
	mulrdx, mulrax = mulrax * yp[0];
	cf, r4 += mulrax;
	mulr41 += mulrdx + cf; 
	mulrax = mulx419_stack;
	mulrdx, mulrax = mulrax * yp[2];
	cf, r1 += mulrax;
	mulr11 += mulrdx + cf; 
	mulrax = mulx419_stack;
	mulrdx, mulrax = mulrax * yp[3];
	cf, r2 += mulrax;
	mulr21 += mulrdx + cf; 
	mulrax = mulx419_stack;
	mulrdx, mulrax = mulrax * yp[4];
	cf, r3 += mulrax;
	mulr31 += mulrdx + cf; 
	mulredmask = crypto_scalarmult_curve25519_amd64_51_REDMASK51; 
	mulr01 = (mulr01, r0) << 13;
	r0 &= mulredmask;
	mulr11 = (mulr11, r1) << 13;
	r1 &= mulredmask;
	r1 += mulr01;
	mulr21 = (mulr21, r2) << 13;
	r2 &= mulredmask;
	r2 += mulr11;
	mulr31 = (mulr31, r3) << 13;
	r3 &= mulredmask;
	r3 += mulr21;
	mulr41 = (mulr41, r4) << 13;
	r4 &= mulredmask;
	r4 += mulr31;
	mulr41 = mulr41 * 19;
	r0 += mulr41;
	mult = r0;
	mult >>= 51;
	mult += r1;
	r1 = mult;
	mult >>= 51;
	r0 &= mulredmask;
	mult += r2;
	r2 = mult;
	mult >>= 51;
	r1 &= mulredmask;
	mult += r3;
	r3 = mult;
	mult >>= 51;
	r2 &= mulredmask;
	mult += r4;
	r4 = mult;
	mult >>= 51;
	r3 &= mulredmask;
	mult *= 19;
	r0 += mult;
	r4 &= mulredmask;
	rp[0] = r0;
	rp[1] = r1;
	rp[2] = r2;
	rp[3] = r3;
	rp[4] = r4;
	return;
}



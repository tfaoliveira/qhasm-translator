export fn crypto_sign_ed25519_amd64_64_sc25519_lt(reg u64 xp, reg u64 yp){
	 reg bool cf;
	 reg u64 doof;
	 reg u64 ret;
	 reg u64 t0;
	 reg u64 t1;
	 reg u64 t2;
	 reg u64 t3;

	t0 = [xp + 0*8];  //t0 = *(uint64 *) (xp + 0)
	t1 = [xp + 1*8];  //t1 = *(uint64 *) (xp + 8)
	t2 = [xp + 2*8];  //t2 = *(uint64 *) (xp + 16)
	t3 = [xp + 3*8];  //t3 = *(uint64 *) (xp + 24)
	cf, t0 -= [yp + 0*8];  //cf? t0 -= *(uint64 *) (yp + 0)
	cf, t1 -= [yp + 1*8] - cf;  //cf? t1 -= *(uint64 *) (yp + 8) - cf; 
	cf, t2 -= [yp + 2*8] - cf;  //cf? t2 -= *(uint64 *) (yp + 16) - cf; 
	cf, t3 -= [yp + 3*8] - cf;  //cf? t3 -= *(uint64 *) (yp + 24) - cf; 
	ret = 0;  //ret = 0
	doof = 1;  //doof = 1
	ret = doof if cf;  //ret = doof if carry; 
	return;
}



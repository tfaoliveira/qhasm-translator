int64 a
int64 b
int64 c
int64 d
int64 e
int64 A
int64 B
int64 C
int64 D
int64 E
int64 r
int64 s
int64 t
int64 u
int64 v
int64 R
int64 S
int64 T
int64 U
int64 V
int64 arg1
int64 arg2
int64 arg3
int64 arg4
input arg1
input arg2
input arg3
input arg4
int64 r11
int64 r12
int64 r13
int64 r14
int64 r15
int64 rbx
int64 rbp
caller r11
caller r12
caller r13
caller r14
caller r15
caller rbx
caller rbp
stack64 r11_stack
stack64 r12_stack
stack64 r13_stack
stack64 r14_stack
stack64 r15_stack
stack64 rbx_stack
stack64 rbp_stack
int64 k
int64 kbits
int64 iv
int64 i
stack64 x_backup
int64 x
stack64 m_backup
int64 m
stack64 out_backup
int64 out
stack64 bytes_backup
int64 bytes
int64 in0
int64 in2
int64 in4
int64 in6
int64 in8
int64 in10
int64 in12
int64 in14
int64 out0
int64 out2
int64 out4
int64 out6
int64 out8
int64 out10
int64 out12
int64 out14
stack64 x0
stack64 x1
stack64 x2
stack64 x3
stack64 x4
stack64 x5
stack64 x6
stack64 x7
stack64 x8
stack64 x9
stack64 x10
stack64 x11
stack64 x12
stack64 x13
stack64 x14
stack64 x15
stack64 j0
stack64 j2
stack64 j4
stack64 j6
stack64 j8
stack64 j10
stack64 j12
stack64 j14
stack512 tmp
int64 ctarget

enter ECRYPT_ivsetup
  iv = arg2
  x = arg1
  in6 = *(uint64 *) (iv + 0)
  in8 = 0
  *(uint64 *) (x + 24) = in6
  *(uint64 *) (x + 32) = in8
leave


enter crypto_hashblocks_rfsb509_amd64_2
int64 rp
int64 bp
int64 blen
input rp
input bp
input blen
int64 c1
int64 c2
int64 c3
int64 c4
int64 c5
int64 c6
int64 c7
caller c1
caller c2
caller c3
caller c4
caller c5
caller c6
caller c7
stack64 c1_stack
stack64 c2_stack
stack64 c3_stack
stack64 c4_stack
stack64 c5_stack
stack64 c6_stack
stack64 c7_stack
c1_stack = c1
c2_stack = c2
c3_stack = c3
c4_stack = c4
c5_stack = c5
c6_stack = c6
c7_stack = c7
int64 positions0
int64 positions8
int64 positions16
int64 positions24
int64 positions32
int64 positions40
int64 positions48
int64 positions56
int64 positions64
int64 positions72
int64 positions80
int64 positions88
int64 positions96
int64 positions104
int64 positions112
int64 pos
int64 pos0
int64 pos1
int64 pos2
int64 pos3
int64 pos4
int64 pos5
int64 pos6
int64 pos7
int6464 v0
int6464 v1
int6464 v2
int6464 v3
int6464 v4
int6464 v5
int6464 v6
int6464 v7
int6464 t0
int6464 t1
int6464 t2
int6464 t3
int6464 t4
int6464 t5
int6464 t6
int6464 t7
int6464 s0
int6464 s1
int6464 s2
int6464 s3
int6464 s4
int6464 s5
int6464 s6
int6464 s7
stack128 state0
stack128 state1
stack128 state2
stack128 state3
int6464 v
int64 matrix
matrix = crypto_hashblocks_rfsb509_amd64_2_matrix
assign 4 to matrix
stack64 rp_stack
rp_stack = rp
int64 mask
(uint32) mask = 0x3fc0
assign 8 to mask
v = *(unaligned int128 *) (rp + 0)
state0 = v
v = *(unaligned int128 *) (rp + 16)
state1 = v
v = *(unaligned int128 *) (rp + 32)
state2 = v
v = *(unaligned int128 *) (rp + 48)
state3 = v
             unsigned<? blen -= 48
goto done if unsigned<
mainloop:
positions0 = ((uint64 *)&state0)[0]
positions8 = ((uint64 *)&state0)[1]
pos3 = positions0
(uint64) pos3 >>= 18
pos3 &= mask
pos2 = positions0
(uint64) pos2 >>= 10
pos2 &= mask
pos1 = positions0
(uint64) pos1 >>= 2
pos1 &= mask
pos0 = positions0
pos0 <<= 6
pos0 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
v4 = *(int128 *)(pos2 + 48 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
v5 = *(int128 *)(pos1 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
v6 = *(int128 *)(pos0 + 48 + matrix)
pos7 = positions0
(uint64) pos7 >>= 50
pos7 &= mask
pos6 = positions0
(uint64) pos6 >>= 42
pos6 &= mask
pos5 = positions0
(uint64) pos5 >>= 34
pos5 &= mask
pos4 = positions0
(uint64) pos4 >>= 26
pos4 &= mask
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
t6 ^= s6
v2 ^= t6
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v1 ^= t5
v2 ^= v5
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v0 ^= t4
v1 ^= v4
positions16 = ((uint64 *)&state1)[0]
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions8
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions8
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions8
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions8
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions8
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions8
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions8
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions8
(uint64) pos4 >>= 26
pos4 &= mask
positions24 = ((uint64 *)&state1)[1]
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions16
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions16
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions16
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions16
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions16
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions16
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions16
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions16
(uint64) pos4 >>= 26
pos4 &= mask
positions32 = ((uint64 *)&state2)[0]
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions24
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions24
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions24
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions24
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions24
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions24
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions24
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions24
(uint64) pos4 >>= 26
pos4 &= mask
positions40 = ((uint64 *)&state2)[1]
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions32
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions32
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions32
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions32
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions32
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions32
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions32
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions32
(uint64) pos4 >>= 26
pos4 &= mask
positions48 = ((uint64 *)&state3)[0]
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions40
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions40
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions40
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions40
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions40
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions40
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions40
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions40
(uint64) pos4 >>= 26
pos4 &= mask
positions56 = ((uint64 *)&state3)[1]
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions48
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions48
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions48
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions48
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions48
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions48
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions48
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions48
(uint64) pos4 >>= 26
pos4 &= mask
positions64 = *(int64 *)(bp + 0)
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions56
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions56
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions56
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions56
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions56
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions56
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions56
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions56
(uint64) pos4 >>= 26
pos4 &= mask
positions72 = *(int64 *)(bp + 8)
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions64
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions64
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions64
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions64
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions64
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions64
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions64
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions64
(uint64) pos4 >>= 26
pos4 &= mask
positions80 = *(int64 *)(bp + 16)
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions72
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions72
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions72
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions72
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions72
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions72
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions72
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions72
(uint64) pos4 >>= 26
pos4 &= mask
positions88 = *(int64 *)(bp + 24)
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions80
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions80
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions80
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions80
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions80
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions80
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions80
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions80
(uint64) pos4 >>= 26
pos4 &= mask
positions96 = *(int64 *)(bp + 32)
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions88
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions88
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions88
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions88
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions88
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions88
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions88
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions88
(uint64) pos4 >>= 26
pos4 &= mask
positions104 = *(int64 *)(bp + 40)
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions96
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions96
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions96
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions96
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions96
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions96
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions96
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions96
(uint64) pos4 >>= 26
pos4 &= mask
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions104
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
pos2 = positions104
(uint64) pos2 >>= 10
pos2 &= mask
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions104
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions104
pos0 <<= 6
pos0 &= mask
uint32323232 v4 ^= *(int128 *)(pos2 + 48 + matrix)
uint32323232 v4 ^= *(int128 *)(pos1 + 32 + matrix)
uint32323232 v4 ^= *(int128 *)(pos0 + 16 + matrix)
v3 = *(int128 *)(pos3 + 48 + matrix)
uint32323232 v3 ^= *(int128 *)(pos2 + 32 + matrix)
uint32323232 v3 ^= *(int128 *)(pos1 + 16 + matrix)
uint32323232 v3 ^= *(int128 *)(pos0 +  0 + matrix)
t7 = v7
uint6464 v7 >>= 61
uint6464 t7 <<= 3
s7[0,1,2,3] = v7[1,1,0,1]
v7 >>= 64
t7 ^= s7
v4 ^= v7
v3 ^= t7
pos7 = positions104
(uint64) pos7 >>= 50
pos7 &= mask
uint32323232 v6 ^= *(int128 *)(pos0 + 48 + matrix)
v2 = *(int128 *)(pos3 + 32 + matrix)
uint32323232 v2 ^= *(int128 *)(pos2 + 16 + matrix)
uint32323232 v2 ^= *(int128 *)(pos1 +  0 + matrix)
t6 = v6
uint6464 v6 >>= 61
uint6464 t6 <<= 3
s6[0,1,2,3] = v6[1,1,0,1]
v6 >>= 64
t6 ^= s6
v3 ^= v6
v2 ^= t6
pos6 = positions104
(uint64) pos6 >>= 42
pos6 &= mask
uint32323232 v5 ^= *(int128 *)(pos0 + 32 + matrix)
uint32323232 v5 ^= *(int128 *)(pos1 + 48 + matrix)
v1 = *(int128 *)(pos3 + 16 + matrix)
uint32323232 v1 ^= *(int128 *)(pos2 +  0 + matrix)
t5 = v5
uint6464 v5 >>= 61
uint6464 t5 <<= 3
s5[0,1,2,3] = v5[1,1,0,1]
v5 >>= 64
t5 ^= s5
v2 ^= v5
v1 ^= t5
pos5 = positions104
(uint64) pos5 >>= 34
pos5 &= mask
v0 = *(int128 *)(pos3 +  0 + matrix)
t4 = v4
uint6464 v4 >>= 61
uint6464 t4 <<= 3
s4[0,1,2,3] = v4[1,1,0,1]
v4 >>= 64
t4 ^= s4
v1 ^= v4
v0 ^= t4
pos4 = positions104
(uint64) pos4 >>= 26
pos4 &= mask
uint32323232 v0 ^= *(int128 *)(pos6 + 48 + matrix)
uint32323232 v0 ^= *(int128 *)(pos5 + 32 + matrix)
uint32323232 v0 ^= *(int128 *)(pos4 + 16 + matrix)
v7 = *(int128 *)(pos7 + 48 + matrix)
uint32323232 v7 ^= *(int128 *)(pos6 + 32 + matrix)
uint32323232 v7 ^= *(int128 *)(pos5 + 16 + matrix)
uint32323232 v7 ^= *(int128 *)(pos4 +  0 + matrix)
t3 = v3
uint6464 v3 >>= 61
uint6464 t3 <<= 3
s3[0,1,2,3] = v3[1,1,0,1]
v3 >>= 64
t3 ^= s3
v0 ^= v3
v7 ^= t3
pos3 = positions112
(uint64) pos3 >>= 18
pos3 &= mask
uint32323232 v2 ^= *(int128 *)(pos4 + 48 + matrix)
v6 = *(int128 *)(pos7 + 32 + matrix)
uint32323232 v6 ^= *(int128 *)(pos6 + 16 + matrix)
uint32323232 v6 ^= *(int128 *)(pos5 +  0 + matrix)
t2 = v2
uint6464 v2 >>= 61
uint6464 t2 <<= 3
s2[0,1,2,3] = v2[1,1,0,1]
v2 >>= 64
t2 ^= s2
v7 ^= v2
v6 ^= t2
uint32323232 v1 ^= *(int128 *)(pos4 + 32 + matrix)
uint32323232 v1 ^= *(int128 *)(pos5 + 48 + matrix)
v5 = *(int128 *)(pos7 + 16 + matrix)
uint32323232 v5 ^= *(int128 *)(pos6 +  0 + matrix)
t1 = v1
uint6464 v1 >>= 61
uint6464 t1 <<= 3
s1[0,1,2,3] = v1[1,1,0,1]
v1 >>= 64
t1 ^= s1
v6 ^= v1
v5 ^= t1
pos1 = positions112
(uint64) pos1 >>= 2
pos1 &= mask
v4 = *(int128 *)(pos7 +  0 + matrix)
t0 = v0
uint6464 v0 >>= 61
uint6464 t0 <<= 3
s0[0,1,2,3] = v0[1,1,0,1]
v0 >>= 64
t0 ^= s0
v5 ^= v0
v4 ^= t0
pos0 = positions112
pos0 <<= 6
pos0 &= mask
t7 = v7
uint6464 t7 >>= 61
t7 >>= 64
v4 ^= t7
v7 &= crypto_hashblocks_rfsb509_amd64_2_MASK125
state0 = v4
state1 = v5
state2 = v6
state3 = v7
bp += 48
                  unsigned<? blen -= 48
goto mainloop if !unsigned<
done:
rp = rp_stack
v = state0
*(unaligned int128 *) (rp + 0) = v
v = state1
*(unaligned int128 *) (rp + 16) = v
v = state2
*(unaligned int128 *) (rp + 32) = v
v = state3
*(unaligned int128 *) (rp + 48) = v
c1 = c1_stack
c2 = c2_stack
c3 = c3_stack
c4 = c4_stack
c5 = c5_stack
c6 = c6_stack
c7 = c7_stack
int64 result
result = blen + 48
assign outputreg 0 to result
leave
